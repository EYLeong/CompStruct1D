/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

/*
   Parameters:
     WIDTH = 16
*/
module cpu_10 (
    input clk,
    input rst,
    input [3:0] p1_button,
    input [3:0] p2_button,
    input [16:0] instr,
    output reg [15:0] out,
    output reg [15:0] s1,
    output reg [15:0] s2
  );
  
  localparam WIDTH = 5'h10;
  
  
  reg [15:0] aluResultI;
  
  wire [1-1:0] M_reg_select_o0;
  wire [1-1:0] M_reg_select_o1;
  wire [1-1:0] M_reg_select_o2;
  decoder2_21 reg_select (
    .we_adr(instr[12+1-:2]),
    .inp(1'h1),
    .o0(M_reg_select_o0),
    .o1(M_reg_select_o1),
    .o2(M_reg_select_o2)
  );
  
  wire [16-1:0] M_r0_reg_out;
  register_22 r0_reg (
    .clk(clk),
    .rst(rst),
    .en(M_reg_select_o0),
    .data(aluResultI),
    .out(M_r0_reg_out)
  );
  
  wire [16-1:0] M_score1_reg_out;
  register_22 score1_reg (
    .clk(clk),
    .rst(rst),
    .en(M_reg_select_o1),
    .data(aluResultI),
    .out(M_score1_reg_out)
  );
  
  wire [16-1:0] M_score2_reg_out;
  register_22 score2_reg (
    .clk(clk),
    .rst(rst),
    .en(M_reg_select_o2),
    .data(aluResultI),
    .out(M_score2_reg_out)
  );
  
  wire [16-1:0] M_reg_mux8_out;
  mux8_25 reg_mux8 (
    .lll(M_r0_reg_out),
    .llh(M_score1_reg_out),
    .lhl(M_score2_reg_out),
    .lhh({12'h000, p1_button}),
    .hll({12'h000, p2_button}),
    .hlh(16'h0000),
    .hhl(16'h0000),
    .hhh(16'h0000),
    .select(instr[14+2-:3]),
    .out(M_reg_mux8_out)
  );
  
  wire [16-1:0] M_alu16_result;
  wire [1-1:0] M_alu16_z;
  wire [1-1:0] M_alu16_v;
  wire [1-1:0] M_alu16_n;
  wire [1-1:0] M_alu16_err;
  alu_26 alu16 (
    .a(M_reg_mux8_out),
    .b({10'h000, instr[6+5-:6]}),
    .alufn(instr[0+5-:6]),
    .result(M_alu16_result),
    .z(M_alu16_z),
    .v(M_alu16_v),
    .n(M_alu16_n),
    .err(M_alu16_err)
  );
  
  always @* begin
    aluResultI = M_alu16_result;
    out = M_r0_reg_out;
    s1 = M_score1_reg_out;
    s2 = M_score2_reg_out;
  end
endmodule
