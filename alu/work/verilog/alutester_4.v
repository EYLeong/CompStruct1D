/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alutester_4 (
    input clk,
    input rst,
    input [15:0] result,
    output reg [15:0] a,
    output reg [15:0] b,
    output reg [5:0] alufn,
    output reg err,
    output reg complete,
    output reg [3:0] caseNum
  );
  
  
  
  localparam TOTAL_CASES = 4'ha;
  
  reg [159:0] aArray;
  
  reg [159:0] bArray;
  
  reg [59:0] fnArray;
  
  reg [159:0] idealArray;
  
  wire [4-1:0] M_testCounter_value;
  counter_7 testCounter (
    .clk(clk),
    .rst(rst),
    .value(M_testCounter_value)
  );
  
  always @* begin
    aArray = 160'hc966172fd64258ff655780009ab8b817263739a7;
    bArray = 160'hb0bb7c4fbd13024896930008000f000a00070003;
    fnArray = 60'h000000fe18a3860;
    idealArray = 160'h7a21937e93555b47fbea00800000ffee004ccd38;
    caseNum = M_testCounter_value;
    if (M_testCounter_value == 4'ha) begin
      a = 1'h0;
      b = 1'h0;
      alufn = 1'h0;
      err = 1'h0;
      complete = 1'h1;
    end else begin
      a = aArray[(M_testCounter_value)*16+15-:16];
      b = bArray[(M_testCounter_value)*16+15-:16];
      alufn = fnArray[(M_testCounter_value)*6+5-:6];
      complete = 1'h0;
      err = result != idealArray[(M_testCounter_value)*16+15-:16];
    end
  end
endmodule
